<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<!-- 회원정보 입력 -->
	<insert id='insertUser' parameterType="UserVO">
		INSERT INTO user(id, pwd, name, phone, addr, email, role)
		VALUES(#{id}, #{pwd}, #{name}, #{phone}, #{addr}, #{email}, 'user')
	</insert>


	<!-- 아이디 중복 체크 -->
	<select id='idCheck' parameterType="string" resultType="int">
        SELECT COUNT(*)  cnt FROM user WHERE id = #{id}
    </select>
    
    <!-- 사용자 로그인 검증 -->
	<select id='loginCheck' parameterType="UserVO" resultType="UserVO">
   		SELECT id, pwd, name, phone, addr, email, role FROM user WHERE id = #{id} AND pwd = #{pwd} AND role = #{role}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateUser" parameterType="UserVO">
		UPDATE user
		SET pwd = #{pwd}, phone = #{phone}, addr = #{addr}, email = #{email}
		WHERE id = #{id}
	</update>
    
	<!-- 장바구니 출력 -->
	<select id="getCartList" parameterType="hashmap" resultType="ShoppingCartVO">
		SELECT * 
	    FROM SHOPPINGCART 
	    WHERE ID = #{id}
	</select>	
	
	<!-- 장바구니 입력 -->
	<insert id="insertCart" parameterType="hashmap">
	INSERT INTO SHOPPINGCART (ID, G_ID, G_NAME, G_RIMG1,P_RENT, P_PRICE, S_NAME)
	VALUES (
    #{id},
    #{g_id},
    (SELECT G_NAME FROM GOODS WHERE G_ID = #{g_id} LIMIT 1),
    (SELECT G_RIMG1 FROM GOODS WHERE G_ID = #{g_id} LIMIT 1),
    #{p_rent},
    (SELECT P_PRICE FROM PRICE WHERE G_ID = #{g_id} LIMIT 1),
    #{s_name}
);
	
	</insert>
	
	<!--  장바구니 삭제 -->
	<delete id="cartDelete" parameterType="ShoppingCartVO">
		DELETE 
		FROM SHOPPINGCART
		WHERE SH_ID = #{sh_id}
	</delete>
	

	<!-- 렌탈 신청 입력 -->
	<insert id="applicationRental" parameterType="UserRentalVO">
	INSERT 
	INTO BUY( B_SIGNDATE, B_STAT, B_RENT, B_PRICE,
	         			B_CARD, B_GIFT, S_NAME, ID, G_ID,ADDR,B_REQUIREMENTS )
	VALUES (    NOW(),  1, #{b_rent}, #{b_price},
	        			#{b_card}, #{b_gift}, #{s_name}, #{id}, #{g_id},#{addr},#{b_requirements} );
	</insert>
	
	<!-- 렌탈신청 후 장바구니 비우기 -->
	<delete id="deleteShoppingCart" parameterType="UserRentalVO">
	DELETE 
    FROM SHOPPINGCART 
    WHERE ID = #{id} 
	</delete>
	
	<!--  회원정보 리스트 출력 -->
	<select id="getUserList" resultType="UserVO">
	    SELECT userWithRowNumber.*
	    FROM (
	        SELECT ROW_NUMBER() OVER (ORDER BY id) AS RN, user.*
	        FROM user 
	        WHERE role = 'USER'
	        <choose>
	            <when test="searchCondition == 'name'">
	                AND name LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'phone'">
	                AND phone LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'id'">
	                AND id LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'addr'">
	                AND addr LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'email'">
	                AND email LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <otherwise>
	                AND 1 = 1
	            </otherwise>
	        </choose>
	    ) AS userWithRowNumber
	    <![CDATA[
	    WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount};
	    ]]>
	</select>




	
    <!-- 게시물 총 개수 -->
	<select id="getTotalUser" resultType="int">
	    SELECT COUNT(*) as total
	    FROM user
	    WHERE role = "USER"
	    <choose>
	        <when test="searchCondition == 'name'">
	            AND name LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'phone'">
	            AND phone LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'id'">
	            AND id LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'addr'">
	            AND addr LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'email'">
	            AND email LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <otherwise>
	            AND 1 = 1
	        </otherwise>
	    </choose>
	</select>	
	
	<!--  공급사 추가 -->
	<insert id="insertSupply" parameterType="UserVO">	
		INSERT INTO user (id , pwd, name, phone, addr, email, role) 
		VALUES(#{id}, #{pwd}, #{name}, #{phone}, #{addr}, #{email}, 'supplier')
	</insert>
	
	<!--  공급사 리스트 출력 -->
	<select id="getSupplyList" resultType="UserVO">
	    SELECT userWithRowNumber.*
	    FROM (
	        SELECT ROW_NUMBER() OVER (ORDER BY id) AS RN, user.*
	        FROM user 
	        WHERE role = 'supplier'
	        <choose>
	            <when test="searchCondition == 'name'">
	                AND name LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'phone'">
	                AND phone LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'id'">
	                AND id LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'addr'">
	                AND addr LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <when test="searchCondition == 'email'">
	                AND email LIKE CONCAT('%', #{searchKeyword}, '%')
	            </when>
	            <otherwise>
	                AND 1 = 1
	            </otherwise>
	        </choose>
	    ) AS userWithRowNumber
	    <![CDATA[
	    WHERE RN > (#{pageNum}-1) * #{amount} AND RN <= #{pageNum} * #{amount};
	    ]]>
	</select>
	
	<!-- 관리자페이지 공급사 count -->
	<select id="getTotalSupply" resultType="int">
	    SELECT COUNT(*) as total
	    FROM user
	    WHERE role = "supplier"
	    <choose>
	        <when test="searchCondition == 'name'">
	            AND name LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'phone'">
	            AND phone LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'id'">
	            AND id LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'addr'">
	            AND addr LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchCondition == 'email'">
	            AND email LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <otherwise>
	            AND 1 = 1
	        </otherwise>
	    </choose>
	</select>		
	
	<!-- 관리자 페이지 사용자 정보 상세보기 -->
	<select id="userDetail" resultType="UserVO">
		<![CDATA[
		SELECT * FROM user 
		WHERE id = "${id}";
		]]>
	</select>    

	<!-- 관리자 페이지 사용자 정보 상세보기 -->
	<update id="userModify" parameterType="UserVO">
		UPDATE user 
		SET pwd ='${pwd}', name ='${name}', phone ='${phone}', addr='${addr}', email='${email}'
		WHERE id = #{id}
	</update>

	
</mapper>