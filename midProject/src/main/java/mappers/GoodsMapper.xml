<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GoodsMapper">

	<!-- 제품 등록 -->
	<insert id="productRegister1" parameterType="GoodsVO">
		INSERT INTO goods (
		g_id, g_name, g_content, m_id, c_id, g_img1, g_rimg1, g_img2, g_rimg2
		, g_img3, g_rimg3, g_img4, g_rimg4 )
		VALUES(#{g_id}, #{g_name},
		#{g_content}, #{m_id}, #{ c_id}, #{g_img1}, #{g_rimg1},
		#{g_img2},
		#{g_rimg2}, #{g_img3}, #{ g_rimg3}, #{g_img4}, #{ g_rimg4})
	</insert>


	<!-- 제품 목록 띄우기 -->
	<select id="getGoodsList" resultType="GoodsVO">
		SELECT G.*
		FROM GOODS G
		INNER JOIN CATEGORY C
		ON C.C_ID = G.C_ID

	</select>

	<!-- 제품 상세 보기 -->
	<select id="getGoodsById" parameterType="GoodsVO"
		resultType="GoodsVO">
		SELECT * FROM goods
		WHERE g_id = #{g_id}
	</select>


	<update id="saveUserReview" parameterType="UserReviewVO">
		UPDATE REVIEW SET
		R_POINT = #{r_point}, R_CONTENT= #{r_content}, R_REGDATE = now()
		WHERE
		R_ID = #{r_id}
	</update>

	<insert id="insertPrice" parameterType="PriceVO">
		INSERT INTO price ( p_id,
		s_name, p_rent, p_price, p_card, p_gift, p_text, g_id, id )
		VALUES(#{p_id}, #{s_name}, #{p_rent}, #{p_price}, #{ p_card},
		#{p_gift}, #{p_text}, #{g_id}, #{id} )
	</insert>

	<update id="modifyPrice" parameterType="PriceVO">
		UPDATE price SET
		p_id =
		#{p_id}, s_name = #{s_name}, p_rent = #{p_rent}, p_price = #{p_price},
		p_card = #{ p_card}, p_gift = #{p_gift}, p_text = #{p_text}, g_id =
		#{g_id}, id = #{id}
		WHERE
		P_ID = #{p_id}
	</update>

	<select id="getPriceList" resultType="PriceVO">
		<![CDATA[
		SELECT  *  FROM PRICE P
		INNER JOIN GOODS G ON P.G_ID = G.G_ID ;
		]]>
	</select>


	<!-- 제품 수정 -->
	<update id="updateGoods" parameterType="GoodsVO">
		UPDATE goods SET
		g_name = #{g_name},
		g_content = #{g_content},
		m_id =
		#{m_id},
		c_id = #{c_id}

		<if test="g_img1 != null">
			, g_img1 = #{g_img1}
			, g_rimg1 = #{g_rimg1}
		</if>
		<if test="g_img2 != null">
			, g_img2 = #{g_img2}
			, g_rimg2 = #{g_rimg2}
		</if>
		<if test="g_rimg3 != null">
			, g_img3 = #{g_img3}
			, g_rimg3 = #{g_rimg3}
		</if>

		<if test="g_img4 != null">
			, g_img4 = #{g_img4}
			, g_rimg4 = #{g_rimg4}
		</if>

		WHERE g_id = #{g_id}
	</update>

	<!-- 제품 삭제 -->
	<delete id="deleteGoods" parameterType="GoodsVO">
		DELETE FROM goods
		WHERE
		g_id = #{g_id}
	</delete>

	<!-- 제품상세검색 -->
	<select id="getCategoryGoodsList" parameterType="HashMap"
		resultType="GoodsVO">
		SELECT GOODS.*, CATEGORY.C_NAME, MAKER.M_NAME
		FROM GOODS
		INNER JOIN CATEGORY ON GOODS.C_ID = CATEGORY.C_ID
		INNER JOIN
		MAKER ON GOODS.M_ID = MAKER.M_ID
		<where>
			<if test="c_name != null and !c_name.isEmpty()">
				AND CATEGORY.C_NAME = #{c_name}
			</if>
			<if test="selectedBrands != null and !selectedBrands.isEmpty()">
				AND MAKER.M_NAME IN
				<foreach collection="selectedBrands" item="brand" open="("
					separator="," close=")">
					#{brand}
				</foreach>
			</if>
			<!-- <if test="minPrice != null and maxPrice != null"> AND PRICE.P_PRICE 
				BETWEEN #{minPrice} AND #{maxPrice} </if> -->
		</where>
	</select>

	<!-- 제품 검색 Header -->
<select id="getSearchGoodsList" parameterType="hashmap" resultType="GoodsVO">
    SELECT DISTINCT G.*, 
    CASE 
        WHEN P.P_PRICE IS NOT NULL THEN
            (SELECT MIN(P2.P_PRICE) FROM PRICE P2 WHERE P2.G_ID = G.G_ID)
        ELSE NULL
    END AS MIN_PRICE, 
    CASE 
        WHEN P.P_PRICE IS NOT NULL THEN
            (SELECT S_NAME FROM PRICE P2 WHERE P2.G_ID = G.G_ID AND P2.P_PRICE = (SELECT MIN(P3.P_PRICE) FROM PRICE P3 WHERE P3.G_ID = G.G_ID))
        ELSE NULL
    END AS S_NAME,
    M.M_NAME
    FROM GOODS G
    LEFT JOIN PRICE P ON G.G_ID = P.G_ID
    LEFT JOIN MAKER M ON G.M_ID = M.M_ID
    LEFT JOIN CATEGORY C ON G.C_ID = C.C_ID
    WHERE 
    <choose>
        <when test="searchCondition == 'total'">
            C_NAME LIKE '%${searchKeyword}%'
            OR G_NAME LIKE '%${searchKeyword}%'
            OR M_NAME LIKE '%${searchKeyword}%' 
            OR S_NAME LIKE '%${searchKeyword}%'
        </when>
        <otherwise>
            1 = 1 <!-- 항상 true이므로 모든 조건이 적용됩니다. -->
        </otherwise>
    </choose>
</select>


</mapper>